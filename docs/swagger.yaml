definitions:
  common.Response:
    properties:
      data: {}
      error:
        type: string
      message:
        type: string
      success:
        type: boolean
    type: object
  model.UserLoginRequestSwaggo:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  model.UserRegisterRequestSwaggo:
    properties:
      age:
        minimum: 9
        type: integer
      email:
        type: string
      password:
        minLength: 6
        type: string
      username:
        type: string
    required:
    - age
    - email
    - password
    - username
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login a user
      parameters:
      - description: User Login
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.UserLoginRequestSwaggo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/common.Response'
            type: array
      summary: User Login
      tags:
      - users
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user
      parameters:
      - description: User Register
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.UserRegisterRequestSwaggo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/common.Response'
            type: array
      summary: User Register
      tags:
      - users
  /users/{userId}:
    put:
      consumes:
      - application/json
      description: Update a user
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      - description: User Update
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.UserRegisterRequestSwaggo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/common.Response'
            type: array
      security:
      - Bearer: []
      summary: User Update
      tags:
      - users
securityDefinitions:
  Bearer JWT Token:
    in: header
    name: Bearer
    type: apiKey
swagger: "2.0"
